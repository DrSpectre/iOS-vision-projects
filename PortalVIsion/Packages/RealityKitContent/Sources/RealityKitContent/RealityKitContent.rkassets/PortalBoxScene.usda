#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Caja", "Maple_Plywood", "Pared_1"]
    def Xform "Caja" (
        active = true
    )
    {
        reorder nameChildren = ["Cubo", "Cubo_1", "Cubo_2", "Cubo_3", "tapa", "fondo", "Pared_1", "Pared_2", "Pared_3", "Pared_4"]
        def Cube "Cubo" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cubo_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (1, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cubo_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (1, 0, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cubo_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (72.36331, 511.47977)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (0, 0, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "tapa" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1.05, 0.05, 1.05)
            float3 xformOp:translate = (0.5, 0.5, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "fondo" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1.05, 0.05, 1.05)
            float3 xformOp:translate = (0.5, -0.5, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "Pared_1" (
            active = true
            customData = {
                float3 rotationEulerHint = (1.5707959, 3.1415927, 0)
            }
        )
        {
            quatf xformOp:orient = (3.090862e-8, 3.090862e-8, -0.70710677, 0.70710677)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.5, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "Pared_2" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 3.1415927, 1.5707959)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (3.090862e-8, 0.70710677, -0.70710677, 3.090862e-8)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "Pared_3" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, 3.1415927, 1.5707955)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (-3.0908623e-8, -0.70710665, 0.7071069, -3.0908613e-8)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (1, 0, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "Pared_4" (
            active = true
            customData = {
                float3 rotationEulerHint = (1.570796, 0, 0)
            }
        )
        {
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (0.7071069, 0.70710665, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.5, 0, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def "Maple_Plywood" (
        active = true
        references = @MaplePlywood.usdz@
    )
    {
        color3f inputs:Basecolor_Tint = (0.8340569, 0.4889084, 0.1779675) (
            colorSpace = "srgb_displayp3"
        )
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

